{"version":3,"file":"browserCryptoHandler-0670fae8.js","sources":["../../../../vim-os/src/store/ehr/vault-tokenizer/browserCryptoHandler.ts"],"sourcesContent":["// eslint-disable-next-line unicorn/prefer-node-protocol\nimport { Buffer } from 'buffer';\nimport { VaultCryptoHandler } from './types';\n\nexport class BrowserCryptoHandler implements VaultCryptoHandler {\n  async createRsaKeyPair(): Promise<{ publicKey: string; privateKey: string }> {\n    const keyPair = await crypto.subtle.generateKey(\n      {\n        name: 'RSA-OAEP',\n        modulusLength: 2048,\n        publicExponent: new Uint8Array([1, 0, 1]),\n        hash: 'SHA-256',\n      },\n      true,\n      ['encrypt', 'decrypt'],\n    );\n\n    return {\n      publicKey: window.btoa(\n        this.ab2str(await window.crypto.subtle.exportKey('spki', keyPair.publicKey)),\n      ),\n      privateKey: window.btoa(\n        this.ab2str(await window.crypto.subtle.exportKey('pkcs8', keyPair.privateKey)),\n      ),\n    };\n  }\n\n  private ab2str(buf: ArrayBuffer) {\n    return String.fromCharCode.apply(null, new Uint8Array(buf) as any);\n  }\n\n  private str2ab(str: string) {\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.codePointAt(i)!;\n    }\n    return buf;\n  }\n\n  async decryptSessionKey(encryptedSessionKey: string, privateKeyStr: string): Promise<string> {\n    const encryptedValue = new Uint8Array(Buffer.from(encryptedSessionKey, 'base64'));\n    const privateKey = await window.crypto.subtle.importKey(\n      'pkcs8',\n      this.str2ab(window.atob(privateKeyStr)),\n      {\n        name: 'RSA-OAEP',\n        hash: 'SHA-256',\n      },\n      true,\n      ['decrypt'],\n    );\n\n    const decryptedRaw = await window.crypto.subtle.decrypt(\n      {\n        name: 'RSA-OAEP',\n      },\n      privateKey,\n      encryptedValue,\n    );\n\n    return Buffer.from(decryptedRaw).toString('base64');\n  }\n\n  async encryptMessageSymmetrically(\n    message: string,\n    sessionKey: string,\n  ): Promise<{ iv: string; encryptedValue: string }> {\n    const iv = window.crypto.getRandomValues(new Uint8Array(16));\n    const key = await window.crypto.subtle.importKey(\n      'raw',\n      this.str2ab(window.atob(sessionKey)),\n      'AES-CTR',\n      true,\n      ['encrypt'],\n    );\n    const cipherText = await window.crypto.subtle.encrypt(\n      {\n        name: 'AES-CTR',\n        counter: iv,\n        length: 64,\n      },\n      key,\n      Buffer.from(message),\n    );\n\n    return {\n      encryptedValue: Buffer.from(cipherText).toString('base64'),\n      iv: Buffer.from(iv).toString('base64'),\n    };\n  }\n}\n"],"names":["_BrowserCryptoHandler","keyPair","buf","str","bufView","i","strLen","encryptedSessionKey","privateKeyStr","encryptedValue","Buffer","privateKey","decryptedRaw","message","sessionKey","iv","key","cipherText","__name","BrowserCryptoHandler"],"mappings":"uHAIO,MAAMA,EAAN,MAAMA,CAAmD,CAC9D,MAAM,kBAAuE,CACrE,MAAAC,EAAU,MAAM,OAAO,OAAO,YAClC,CACE,KAAM,WACN,cAAe,KACf,eAAgB,IAAI,WAAW,CAAC,EAAG,EAAG,CAAC,CAAC,EACxC,KAAM,SACR,EACA,GACA,CAAC,UAAW,SAAS,CAAA,EAGhB,MAAA,CACL,UAAW,OAAO,KAChB,KAAK,OAAO,MAAM,OAAO,OAAO,OAAO,UAAU,OAAQA,EAAQ,SAAS,CAAC,CAC7E,EACA,WAAY,OAAO,KACjB,KAAK,OAAO,MAAM,OAAO,OAAO,OAAO,UAAU,QAASA,EAAQ,UAAU,CAAC,CAC/E,CAAA,CAEJ,CAEQ,OAAOC,EAAkB,CAC/B,OAAO,OAAO,aAAa,MAAM,KAAM,IAAI,WAAWA,CAAG,CAAQ,CACnE,CAEQ,OAAOC,EAAa,CAC1B,MAAMD,EAAM,IAAI,YAAYC,EAAI,MAAM,EAChCC,EAAU,IAAI,WAAWF,CAAG,EAClC,QAASG,EAAI,EAAGC,EAASH,EAAI,OAAQE,EAAIC,EAAQD,IAC/CD,EAAQC,CAAC,EAAIF,EAAI,YAAYE,CAAC,EAEzB,OAAAH,CACT,CAEA,MAAM,kBAAkBK,EAA6BC,EAAwC,CAC3F,MAAMC,EAAiB,IAAI,WAAWC,EAAAA,OAAO,KAAKH,EAAqB,QAAQ,CAAC,EAC1EI,EAAa,MAAM,OAAO,OAAO,OAAO,UAC5C,QACA,KAAK,OAAO,OAAO,KAAKH,CAAa,CAAC,EACtC,CACE,KAAM,WACN,KAAM,SACR,EACA,GACA,CAAC,SAAS,CAAA,EAGNI,EAAe,MAAM,OAAO,OAAO,OAAO,QAC9C,CACE,KAAM,UACR,EACAD,EACAF,CAAA,EAGF,OAAOC,EAAAA,OAAO,KAAKE,CAAY,EAAE,SAAS,QAAQ,CACpD,CAEA,MAAM,4BACJC,EACAC,EACiD,CACjD,MAAMC,EAAK,OAAO,OAAO,gBAAgB,IAAI,WAAW,EAAE,CAAC,EACrDC,EAAM,MAAM,OAAO,OAAO,OAAO,UACrC,MACA,KAAK,OAAO,OAAO,KAAKF,CAAU,CAAC,EACnC,UACA,GACA,CAAC,SAAS,CAAA,EAENG,EAAa,MAAM,OAAO,OAAO,OAAO,QAC5C,CACE,KAAM,UACN,QAASF,EACT,OAAQ,EACV,EACAC,EACAN,EAAA,OAAO,KAAKG,CAAO,CAAA,EAGd,MAAA,CACL,eAAgBH,EAAO,OAAA,KAAKO,CAAU,EAAE,SAAS,QAAQ,EACzD,GAAIP,EAAO,OAAA,KAAKK,CAAE,EAAE,SAAS,QAAQ,CAAA,CAEzC,CACF,EAvFgEG,EAAAlB,EAAA,wBAAzD,IAAMmB,EAANnB"}